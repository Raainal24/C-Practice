#include <stdio.h>
#include <stdlib.h>

struct Node {
    int data;
    struct Node* next;
};

struct Node* head = NULL;

// Function to insert a node at the end of the linked list
void insert(int value) {
    struct Node* newNode = (struct Node*)malloc(sizeof(struct Node));
    newNode->data = value;
    newNode->next = NULL;

    if (head == NULL) {
        head = newNode;
        return;
    }

    struct Node* current = head;
    while (current->next != NULL) {
        current = current->next;
    }
    current->next = newNode;
}

// Function to delete a node at a given position
void deleteNode(int pos) {
    if (head == NULL || pos < 0) {
        printf("Invalid operation.\n");
        return;
    }

    if (pos == 0) {
        struct Node* temp = head;
        head = head->next;
        printf("Deleted element: %d\n", temp->data);
        free(temp);
        return;
    }

    struct Node* current = head;
    struct Node* prev = NULL;
    int i = 0;

    while (current != NULL && i < pos) {
        prev = current;
        current = current->next;
        i++;
    }

    if (current == NULL) {
        printf("Position %d does not exist.\n", pos);
        return;
    }

    prev->next = current->next;
    printf("Deleted element: %d\n", current->data);
    free(current);
}

// Function to display the linked list
void displayList() {
    struct Node* current = head;
    while (current != NULL) {
        printf("%d -> ", current->data);
        current = current->next;
    }
    printf("NULL\n");
}

int main() {
    int choice, item;

    do {
        printf("Enter the item to insert: ");
        scanf("%d", &item);
        insert(item);
        printf("Linked List: ");
        displayList();

        printf("Press 0 to insert more, or enter the position to delete (negative to exit): ");
        scanf("%d", &choice);

        if (choice >= 0) {
            deleteNode(choice);
            printf("Linked List after deletion: ");
            displayList();
        }

    } while (choice >= 0);

    return 0;
}

